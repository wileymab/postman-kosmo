{
	"info": {
		"_postman_id": "c9b8d06a-dc76-4135-a005-9eba8a532c4c",
		"name": "Kosmo Parameters",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Kosmo Parameters",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "bc58f84c-c831-4d66-88aa-cf2b89c446b1",
						"exec": [
							"function Kosmo() {",
							"    var _ = { // \"Private\" API",
							"        kosmoCatalog: \"KOSMO_CATALOG\",",
							"        setParams: (paramsObject, flatParamsSet) => {",
							"            _.clearParams();",
							"            flatParamsSet = flatParamsSet || {};",
							"            var props = Object.keys(paramsObject);",
							"            var toRecurse = [];",
							"            for ( var i = 0; i < props.length; i++ ) {",
							"                var propName = props[i];",
							"                var propValue = paramsObject[propName];",
							"                if ( typeof propValue === \"object\" ) {",
							"                    toRecurse.push(propValue);",
							"                }",
							"                else {",
							"                    flatParamsSet[propName] = propValue;",
							"                }",
							"            }",
							"            for ( i = 0; i < toRecurse.length; i++ ) {",
							"                _.setParams(toRecurse[i],flatParamsSet);",
							"            }",
							"            var flatProps = Object.keys(flatParamsSet)",
							"            for ( i = 0; i < flatProps.length; i++ ) {",
							"                propName = flatProps[i];",
							"                propValue = flatParamsSet[propName];",
							"                pm.globals.set(propName, propValue);",
							"            }",
							"            pm.globals.set(_.kosmoCatalog, JSON.stringify(flatProps))",
							"        },",
							"        clearParams: () => {",
							"            var serializedCatalog = pm.globals.get(_.kosmoCatalog);",
							"            if (serializedCatalog) {",
							"                var kosmoVarNames = JSON.parse(serializedCatalog)",
							"                for ( var i = 0; i < kosmoVarNames.length; i++ ) {",
							"                    pm.globals.unset(kosmoVarNames[i])",
							"                }",
							"                pm.globals.unset(_.kosmoCatalog)",
							"            }",
							"        }",
							"    }",
							"    ",
							"    var api = { // Public API",
							"        clearParams: () => {",
							"            _.clearParams()",
							"        },",
							"        setParamsByObject: (localParamsObject) => {",
							"            _.setParams(localParamsObject)",
							"        }",
							"    }",
							"",
							"    return api;",
							"}",
							"/** ================================================================================",
							" *  Instantiate Kosmo",
							" */",
							"var kosmo = Kosmo()",
							"",
							"/** ================================================================================",
							" *  Setup parameters as name-value pairs in a JSON object.",
							" */",
							" ",
							"// Just a list of parameters",
							"var simpleParameterList = {",
							"    USER: 'wileymab',",
							"    EMAIL: 'wileymab@gmail.com',",
							"    AGE: 37",
							"}",
							"",
							"// A slightly more comples tree of parameters. The subtrees help to logically ",
							"// organize the parameters for development/management.",
							"var slightlyLessSimpleParameterTree = {",
							"    EMAIL: \"wileymab@gmail.com\",",
							"    set1: {",
							"        PARAM_1: 1,",
							"        PARAM_2: 9000,",
							"        PARAM_3: \"123456789\",",
							"        subsetA: {",
							"            SUB_PARAM_1: \"8675309\",",
							"            SUB_PARAM_2: \"Reel Big Fish\"",
							"        }",
							"    }",
							"}",
							"",
							"",
							"// More complex APIs may need more robust management. So break things up into ",
							"// domains and mix and match as needed. Like so...",
							"var users = {",
							"    // User Instances",
							"    defaultUser: {",
							"        USER_NAME: 'default',",
							"        USER_EMAIL: 'idontexist@myapp.com',",
							"        USER_AGE: 996",
							"    },",
							"    testUser1: {",
							"        USER_NAME: 'Smoke Test',",
							"        USER_EMAIL: 'smoke@myapp.com',",
							"        USER_AGE: 1",
							"    }",
							"}",
							"",
							"var projects = {",
							"    // Project Instances",
							"    project1: {",
							"        PROJECT_ID: 1,",
							"        PROJECT_TITLE: 'My First Project',",
							"    },",
							"    project2: {",
							"        PROJECT_ID: 2,",
							"        PROJECT_TITLE: 'Other Project'",
							"    }",
							"}",
							"",
							"// ... then combine them as needed ...",
							"var case1 = {",
							"    user: users.defaultUser,",
							"    project: projects.project1",
							"}",
							"",
							"var case2 = {",
							"    user: users.defaultUser,",
							"    project: projects.project2",
							"}",
							"",
							"var smokeTest = {",
							"    user: users.testUser1,",
							"    project: projects.project1",
							"}",
							"",
							"// ... or even ... ",
							"var useCases = {",
							"    defaultUser_project1: {",
							"        user: users.defaultUser,",
							"        project: projects.project1",
							"    },",
							"    defaultUser_project2: {",
							"        user: users.testUser1,",
							"        project: projects.project2",
							"    },",
							"    smokeTest: {",
							"        user: users.testUser1,",
							"        project: projects.project1",
							"    }",
							"}",
							"",
							"",
							"/** ================================================================================",
							" * Set params using Kosmo",
							" */",
							"kosmo.setParamsByObject(useCases.defaultUser_project2)",
							"// kosmo.clearParams()",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PROPFIND",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "kosmoparams.io",
					"host": [
						"kosmoparams",
						"io"
					]
				}
			},
			"response": []
		}
	]
}